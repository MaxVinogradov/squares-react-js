{"version":3,"sources":["components/Generator.jsx","components/Table.jsx","components/Button.jsx","App.js","serviceWorker.js","index.js"],"names":["timeout","Table","matrix","cellSize","onMouseOver","onMouseLeave","id","map","_","rowNumber","key","Array","from","length","collNumber","style","width","height","Button","text","children","dynamicStyles","className","handleClick","onClick","memo","initialHeight","initialWidth","useState","generateMatrix","setMatrix","columnIndex","rowIndex","setItemToRemove","removeColumnButtonVisibility","setRemoveColumnButtonVisibility","removeRowButtonVisibility","setRemoveRowButtonVisibility","removeRowButtonTop","setRemoveRowButtonTop","removeColumnButtonLeft","setRemoveColumnButtonLeft","hideRemoveButtons","useCallback","setTimeout","removeColumnActionHandler","clearTimeout","row","filter","v","i","removeRowActionHandler","addRowActionHandler","mouseOverTableHandler","event","target","HTMLTableCellElement","cellIndex","parentNode","offsetTop","offsetLeft","mouseLeaveTableOrButtonHandler","isMouseMovedOnButton","relatedTarget","classList","contains","parentElement","margin","top","left","visibility","bottom","right","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f775b7e6.chunk.js","sourcesContent":["import React, { useState, useCallback, memo } from 'react';\nimport Table from './Table';\nimport Button from './Button';\n\nlet timeout;\n\nconst generateMatrix = (height, width, i = 0) => Array\n  .from(Array(height))\n  .map((_, rowNumber) => Array.from(Array(width)).map((_, collNumber) => ({ rowNumber, collNumber })));\n\nconst Generator = ({ initialHeight = 4, initialWidth = 4, cellSize = 50 }) => {\n  const [matrix, setMatrix] = useState(generateMatrix(initialHeight, initialWidth));\n  const [{ columnIndex, rowIndex }, setItemToRemove] = useState({ columnIndex: 0, rowIndex: 0 });\n  const [removeColumnButtonVisibility, setRemoveColumnButtonVisibility] = useState('hidden');\n  const [removeRowButtonVisibility, setRemoveRowButtonVisibility] = useState('hidden');\n  const [removeRowButtonTop, setRemoveRowButtonTop] = useState(2);\n  const [removeColumnButtonLeft, setRemoveColumnButtonLeft] = useState(3);\n\n\n  const hideRemoveButtons = useCallback(() => {\n    timeout = setTimeout(() => {\n      setRemoveRowButtonVisibility('hidden');\n      setRemoveColumnButtonVisibility('hidden');  \n    }, 3000);\n  }, [])\n\n  const removeColumnActionHandler = useCallback(() => {\n    clearTimeout(timeout);\n    if (matrix[0].length > 1) setMatrix(matrix.map(row => row.filter((v, i) => i !== columnIndex)));\n    if (matrix[0].length === 1) setRemoveColumnButtonVisibility('hidden');\n    if (columnIndex === matrix[0].length - 1) {\n      setRemoveColumnButtonLeft(removeColumnButtonLeft - cellSize - 2);\n      setItemToRemove({ columnIndex: columnIndex - 1, rowIndex });\n    }\n    hideRemoveButtons();\n  }, [cellSize, columnIndex, hideRemoveButtons, matrix, removeColumnButtonLeft, rowIndex]);\n\n  const removeRowActionHandler = useCallback(() => {\n    clearTimeout(timeout);\n    if (matrix.length > 1) setMatrix([...matrix].filter((v, i) => i !== rowIndex));\n    if (matrix.length === 1) setRemoveRowButtonVisibility('hidden');\n    if (rowIndex === matrix.length - 1) {\n      setRemoveRowButtonTop(removeRowButtonTop - cellSize - 2);\n      setItemToRemove({ columnIndex, rowIndex: rowIndex - 1 });\n    }\n    hideRemoveButtons();\n  }, [cellSize, columnIndex, hideRemoveButtons, matrix, removeRowButtonTop, rowIndex]);\n\n  const addColumnHandler = () => {\n    setMatrix(\n      [...matrix].map((row, rowNumber) => ([...row, { rowNumber, collNumber: row[row.length - 1].collNumber + 1 }]))\n    )\n  };\n\n  const addRowActionHandler = useCallback(() => {\n    const rowNumber = matrix[matrix.length - 1][0].rowNumber + 1;\n    setMatrix([\n      ...matrix,\n      Array.from(Array(matrix[0].length)).map((_, collNumber) => ({ rowNumber, collNumber })),\n    ])\n  }, [matrix]);\n\n  const mouseOverTableHandler = useCallback((event) => {\n    clearTimeout(timeout);\n    if (!(event.target instanceof HTMLTableCellElement)) return;\n    const {\n      target: {\n        cellIndex: columnIndex,\n        parentNode: { rowIndex },\n        offsetTop,\n        offsetLeft,\n      },\n    } = event;\n\n    setItemToRemove({ columnIndex, rowIndex });\n\n    if (matrix.length !== 1) {\n      setRemoveRowButtonVisibility('visible');\n      setRemoveRowButtonTop(offsetTop);\n    };\n    if (matrix[0].length !== 1) {\n      setRemoveColumnButtonVisibility('visible');\n      setRemoveColumnButtonLeft(offsetLeft)\n    };\n\n  }, [matrix]);\n\n  const mouseLeaveTableOrButtonHandler = useCallback((event) => {\n    const isMouseMovedOnButton = event.relatedTarget.classList.contains('remove-button') ||\n      (event.relatedTarget.parentElement && event.relatedTarget.parentElement.classList.contains('remove-button'));\n    const isMouseMovedFromTable = event.target.id === 'main-table';\n    if (isMouseMovedFromTable && isMouseMovedOnButton) return;\n    hideRemoveButtons();\n  }, [hideRemoveButtons])\n\n  return (\n    <div className=\"generator-container\" style={{ margin: cellSize * 2 }}>\n      <Table\n        matrix={matrix}\n        cellSize={cellSize}\n        onMouseOver={mouseOverTableHandler}\n        onMouseLeave={mouseLeaveTableOrButtonHandler}\n      />\n      <Button\n        className=\"remove-button\"\n        dynamicStyles={{\n          width: `${cellSize}px`,\n          height: `${cellSize}px`,\n          top: `${-cellSize - 3}px`,\n          left: `${removeColumnButtonLeft}px`,\n          visibility: removeColumnButtonVisibility,\n        }}\n        handleClick={removeColumnActionHandler}\n        onMouseLeave={mouseLeaveTableOrButtonHandler}\n      >\n        -\n      </Button>\n      <Button\n        className=\"remove-button\"\n        dynamicStyles={{\n          width: `${cellSize}px`,\n          height: `${cellSize}px`,\n          left: `${-cellSize - 3}px`,\n          top: `${removeRowButtonTop}px`,\n          visibility: removeRowButtonVisibility,\n        }}\n        handleClick={removeRowActionHandler}\n        onMouseLeave={mouseLeaveTableOrButtonHandler}\n      >\n        -\n      </Button>\n      <Button\n        className=\"add-button\"\n        dynamicStyles={{\n          width: `${cellSize}px`,\n          height: `${cellSize}px`,\n          left: \"3px\",\n          bottom: `${-cellSize - 3}px`,\n        }}\n        handleClick={addRowActionHandler}\n        onMouseLeave={mouseLeaveTableOrButtonHandler}\n      >\n        +\n      </Button>\n      <Button\n        className=\"add-button\"\n        dynamicStyles={{\n          width: `${cellSize}px`,\n          height: `${cellSize}px`,\n          right: `${-cellSize - 3}px`,\n          top: \"2px\",\n        }}\n        handleClick={addColumnHandler}\n        onMouseLeave={mouseLeaveTableOrButtonHandler}\n      >\n        +\n      </Button>\n    </div>\n  );\n}\n\nexport default memo(Generator);\n","import React from 'react';\n\nconst Table = ({ matrix, cellSize, onMouseOver, onMouseLeave }) => {\n  const generateTable = () => matrix\n    .map((_, rowNumber) => (\n      <tr\n        key={matrix[rowNumber][0].rowNumber}\n      >\n        {\n          Array\n            .from(Array(matrix[0].length))\n            .map((_, collNumber) => (\n              <td\n                key={`${matrix[rowNumber][collNumber].collNumber}`}\n                style={{ width: cellSize, height: cellSize }}>\n              </td>\n            ))\n        }\n      </tr>\n    ));\n\n  return (\n    <table id=\"main-table\" onMouseOver={onMouseOver} onMouseLeave={onMouseLeave} >\n      <tbody>\n        {generateTable(matrix, cellSize)}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n","import React from 'react';\n\nconst Button = ({ children: text, dynamicStyles, className, handleClick, onMouseLeave }) => {\n  \n  return (\n    <div\n      className={`button ${className}`} \n      style={dynamicStyles}\n      onClick={handleClick}\n      onMouseLeave={onMouseLeave}\n    >\n      <span>{text}</span>\n    </div>\n  );\n}\n\nexport default Button;\n","import React from 'react';\nimport Generator from './components/Generator'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Generator initialHeight={4} initialWidth={4} cellSize={50}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}